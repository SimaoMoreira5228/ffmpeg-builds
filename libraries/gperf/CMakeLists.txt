project(gperf)

include(ExternalProject)

set(GPERF_PREFIX ${CMAKE_BINARY_DIR}/_deps/gperf)
set(GPERF_INSTALL_DIR ${CMAKE_BINARY_DIR}/_install/gperf)
set(GPERF_SOURCE_DIR ${GPERF_PREFIX}/src)
set(GPERF_TMP_DIR ${GPERF_PREFIX}/tmp)
set(GPERF_STAMP_DIR ${GPERF_PREFIX}/stamp)
set(GPERF_LOG_DIR ${GPERF_PREFIX}/log)
set(GPERF_BINARY_DIR ${GPERF_PREFIX}/build)

find_program(BASH_BIN bash)

ExternalProject_Add(gperf
    URL https://ftp.gnu.org/gnu/gperf/gperf-3.1.tar.gz
    URL_HASH SHA256=588546b945bba4b70b6a3a616e80b4ab466e3f33024a352fc2198112cdbb3ae2
    DOWNLOAD_NO_PROGRESS TRUE
    PREFIX ${GPERF_PREFIX}
    TMP_DIR ${GPERF_TMP_DIR}
    STAMP_DIR ${GPERF_STAMP_DIR}
    INSTALL_DIR ${GPERF_INSTALL_DIR}
    SOURCE_DIR ${GPERF_SOURCE_DIR}
    LOG_DIR ${GPERF_LOG_DIR}
    UPDATE_DISCONNECTED TRUE
    WORKING_DIRECTORY ${GPERF_SOURCE_DIR}
    BUILD_IN_SOURCE TRUE
    LOG_CONFIGURE ON
    LOG_INSTALL ON
    LOG_BUILD ON
    LOG_OUTPUT_ON_FAILURE ON
    UPDATE_COMMAND ""
    CONFIGURE_COMMAND ${BASH_BIN} ./configure
            --prefix=${GPERF_INSTALL_DIR}
    BUILD_COMMAND make -j$ENV{CMAKE_BUILD_PARALLEL_LEVEL}
    INSTALL_COMMAND make install
)


set_target_properties(gperf PROPERTIES
    PATH ${GPERF_INSTALL_DIR}/bin
    EXECUTABLE ${GPERF_INSTALL_DIR}/bin/gperf${EXECUTABLE_EXTENSION}
)
