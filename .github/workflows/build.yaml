name: Build FFmpeg

on:
  push:
    branches:
      - main
      - troy
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-22.04-arm
          - windows-2022
          - macos-13 # x86_64
          - macos-15 # ARM64
    runs-on: ${{ matrix.os }}
    steps:
      - run: git config --global core.autocrlf input
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-22.04-arm'
        run: |
          sudo apt-get update && sudo apt-get install -y git build-essential nasm yasm make cmake ninja-build pkg-config  gcc-12 g++-12
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 100
          sudo update-alternatives --config gcc
          sudo update-alternatives --config g++
          pip3 install --user meson

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-15' || matrix.os == 'macos-13'
        run: brew install git nasm yasm cmake make meson ninja pkg-config

      - uses: MinoruSekine/setup-scoop@v4.0.1
        if: runner.os == 'Windows'
        with:
          apps: perl nasm meson ninja pkg-config git make

      - name: Build FFmpeg Windows
        if: matrix.os == 'windows-2022'
        shell: cmd
        run: |
          @echo off
          set "ORIGINAL_PATH=%PATH%"
          set "PATH=%SystemRoot%\System32;%SystemRoot%;%SystemRoot%\System32\Wbem"
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set "VC_PATHS=%PATH%"
          set "PATH=%VC_PATHS%;%ORIGINAL_PATH%"
          bash build.sh

      - name: Build FFmpeg Linux/macOS
        if: matrix.os != 'windows-2022'
        run: bash build.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "ffmpeg-build-${{ matrix.os }}"
          path: "*.tar.gz"
          if-no-files-found: ignore

  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-24.04
    if: ${{ github.event_name != 'pull_request' }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Move Artifacts
        run: |
          set -eo pipefail
          mkdir -p upload
          find artifacts/ -type f -exec mv {} $(pwd)/upload/ \;
          rm -rf artifacts/

      - uses: ncipollo/release-action@v1
        with:
          artifacts: upload/*
          makeLatest: true
          allowUpdates: true
          name: Auto-Release ${{ github.run_id }}
          body: |
            This is an auto-release of ffmpeg.
            Triggered by ${{ github.event_name }}
            [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          tag: latest
          replacesArtifacts: true

      - uses: ncipollo/release-action@v1
        with:
          artifacts: upload/*
          makeLatest: false
          allowUpdates: true
          name: Auto-Release ${{ github.run_id }}
          body: |
            This is an auto-release of ffmpeg.
            Triggered by ${{ github.event_name }}
            [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          tag: auto-release-${{ github.run_id }}
          replacesArtifacts: true
