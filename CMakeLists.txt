cmake_minimum_required(VERSION 3.27)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

project(ffmpeg-static-build)

set(FFMPEG_STATIC_BUILD_DIR ${CMAKE_CURRENT_SOURCE_DIR})

set(FFMPEG_TAG "master" CACHE STRING "FFmpeg tag to build")

if(WIN32)
    set(EXECUTABLE_EXTENSION ".exe")
    set(STATIC_LIBRARY_EXTENSION ".lib")
    set(SHARED_LIBRARY_EXTENSION ".dll")
elseif(APPLE)
    set(EXECUTABLE_EXTENSION "")
    set(STATIC_LIBRARY_EXTENSION ".a")
    set(SHARED_LIBRARY_EXTENSION ".dylib")
elseif(UNIX)
    set(EXECUTABLE_EXTENSION "")
    set(STATIC_LIBRARY_EXTENSION ".a")
    set(SHARED_LIBRARY_EXTENSION ".so")
else()
    message(FATAL_ERROR "Unsupported platform")
endif()

add_subdirectory(libraries/zlib EXCLUDE_FROM_ALL)
add_subdirectory(libraries/fribidi EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libexpat EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libfdk-aac EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libfreetype EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libpng EXCLUDE_FROM_ALL)
add_subdirectory(libraries/harfbuzz EXCLUDE_FROM_ALL)
add_subdirectory(libraries/gperf EXCLUDE_FROM_ALL)
add_subdirectory(libraries/fontconfig EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libass EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libbrotli EXCLUDE_FROM_ALL)
add_subdirectory(libraries/openssl EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libmp3lame EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libopus EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libogg EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libvorbis EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libvpx EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libx264 EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libx265 EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libaom EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libwebp EXCLUDE_FROM_ALL)
add_subdirectory(libraries/libdav1d EXCLUDE_FROM_ALL)
add_subdirectory(libraries/ffmpeg)
